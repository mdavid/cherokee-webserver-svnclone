== link:index.html[Index] -> link:dev.html[Development info]

Development: Open issues
------------------------

This section of the documentation comprehends a variety of topics. It
is mainly intended as a repository of notes, tips, issues and
documentation concerning parts of Cherokee that are currently under
development -or are full developed- but are not yet included for
mainstream usage.

As these features get properly integrated into the Cherokee
infrastructure, the notes regarding the subject should be moved to
their specific section of the docmentation.

For now, this document mantains a list of currently open issues. It
mostly is useful to list things of the Cherokee Project that are known
to be half-baked, and as such are only of interest for developers.

FastCGI Handler
~~~~~~~~~~~~~~~

There are two handlers currently implementing the FastCGI protocol:
"fcgi" and "fastcgi".

The "fastcgi" module also implements the FastCGI protocol. It is a
more complete implementation than "fcgi" although it is also more
complex. Actually, fcgi became the standard choice because the PHP
interpreter is kind of buggy when it has to demultiplex multiple
requests from the same socket. As such, it is the only one supported
by Cherokee-Admin.

The "fastcgi" handler will eventually become the default option
because it is faster and more standard-compliant. However, at the
moment "fcgi" is a better option.

Reverse Proxy
~~~~~~~~~~~~~

The reverse proxy is currently one of the most demanded features and
is under heavy development.  The Cherokee-admin module is not yet
written, so you'll have to do what no final user is meant to do. It's
easy to configure though, so don't worry. It is working nicely, and
since r2373 it supports URL rewriting.

Here you have a basic configuration example:

----
server!port = 1234

# The proxy configuration
vserver!1!nick = default
vserver!1!document_root = /tmp
vserver!1!rule!1!match = default
vserver!1!rule!1!handler = proxy
vserver!1!rule!1!handler!header_hide!1 = server
vserver!1!rule!1!handler!balancer = round_robin
vserver!1!rule!1!handler!balancer!source!1 = 1

# URL rewrite
vserver!1!rule!1!handler!rewrite_request!1!regex = ^/(.+).png$
vserver!1!rule!1!handler!rewrite_request!1!substring = /$1.jpg
vserver!1!rule!1!handler!rewrite_request!2!regex = ^/test/(.+)$
vserver!1!rule!1!handler!rewrite_request!2!substring = /test.php?$1

source!1!type = host
source!1!host = localhost:9090
----


Configuration Wizards
~~~~~~~~~~~~~~~~~~~~~

Another interesting feature -not yet reflected in the repository- is a
project aimed at providing configuration wizards as an easy way to
deploy a set of standard applications. The idea is to select an
application from the list and let the wizard configure Cherokee to be
able to run one such application -say Wordpress, for instance-.

Even though the obtained configuration will most probably not be
perfect, it will always be a good starting point to play with for
further tuning.

AND, OR and NOT rule types
~~~~~~~~~~~~~~~~~~~~~~~~~~

These rule types are fully implemented, but the feature is not yet
supported in Cherokee Admin. Some GUI issues remain to be solved, as
the things achievable by these rules are at the same time very
powerful and very complex. This is said in the sense that one can
combine them with so much flexibility that dealing with it from the
GUI could get really messy.
