== link:index.html[Index] -> link:cookbook.html[Cookbook]

Cookbook: Setting up Drupal
---------------------------

Setting up link:http://drupal.org/[Drupal] with Cherokee is really
easy. We will assume that our `Document Root` directory is
`/var/www/drupal` of the server we are working on. This recipe uses
Drupal 6.6, which is the latest release at the time of writing.

You will need PHP support correctly configured in Cherokee, and PHP
with the MySQL module installed. The default configuration already
provides a valid PHP configuration for Cherokee if you have php-cgi
installed, but you can follow the appropriate recipe about
link:cookbook_php.html[setting up PHP] in case you don't have it
available for some reason.

Under these conditions, you could start Drupal's installation and you
would already be able to have your site up and running.

However, we can add several refinements to Cherokee's
settings. Mainly:

. Forward all requests for www.example.net (or whatever domain is
  resolved to our machine) to example.net

. Set up an appropriate url rewriting configuration for Drupal.

. Serve directly the static content speeding avoiding the
  dynamic-processing bottle-neck.

. Use the regex from Drupal's .htaccess for denying access to certain
  paths.

With this we should be able to do everything Drupal's supposed to do,
and it should work with Imagecache's dynamic thumbnail generation.

[[cherokee]]
Setting up Cherokee
~~~~~~~~~~~~~~~~~~~

Default virtual server
^^^^^^^^^^^^^^^^^^^^^^

We'll begin by cloning the default virtual server, just to keep the
default PHP configuration. Create a clone named `example.net`.

image::media/images/cookbook_drupal_default1.png[Drupal default]

Then, we'll delete every erasable rule in the default virtual server
since we are going to use it to redirect every petition not matched by
the example.net virtual server. We will set the remaining one to be
managed by the `Redirection` handler, like this:

image::media/images/cookbook_drupal_default2.png[Drupal default]

[options="header"]
|===================================================
|Type     |Regular Expression |Redirection
|External |(.*)$              |http://example.net/$1
|===================================================

After that, this is how the list of rules for this server should look
like.

image::media/images/cookbook_drupal_default3.png[Drupal default]

This clears the first milestone. The remaining three will be
accomplished by tweaking the `example.net` virtual server.


example.net
^^^^^^^^^^^

First step
++++++++++

Remember to set up the `Document root` to `/var/www/drupal`.

image::media/images/cookbook_drupal_example1.png[Drupal example]

Delete all the rules except `php` and `Default`.

image::media/images/cookbook_drupal_example2.png[Drupal example]

As previously, we will manage the `Default` rule with the redirection
handler.

[options="header"]
|=============================================
|Type     |Regular Expression |Redirection
|Internal |^/(.*)$            |/index.php?q=$1
|=============================================

image::media/images/cookbook_drupal_example3.png[Drupal example]

Second step
+++++++++++

Remember to set up Drupal as custom error handler for the virtual
server. Do so in the `Error Handler` tab, selecting the `Custom
redirections` option and sending 404 errors to Drupal.

image::media/images/cookbook_drupal_example4.png[Drupal example]

[options="header"]
|=========================
|Error         |URL
|404 Not Found |/index.php
|=========================

Third step
++++++++++

Next, we need to address the clean URLs matter. To do so, create
another redirection rule.

[options="header"]
|================================================
|Type     |Regular Expression |Redirection
|Internal |^/(.*)\?(.*)$      |/index.php?q=$1&$2
|================================================

Fourth step
+++++++++++

After this we will go straight to another milestone: directly serving
static files, which is an easy task to accomplish.

Just set up an `File Exists`-type rule. Check the `Match any`
checkbox, and manage it with the `Static file` handler. Remember to
activate the `IO Cache` option and to specify whatever expiration
period you see fit for these files. If you ever edit the configuration
just remember that this rule should be located after the PHP
rule. Otherwise you will end up statically serving them instead of
processing them via PHP. In fact it is a good idea to keep your rules
for dynamic contents in a high position on your list of rules.

Fifth step
++++++++++

Now to block bad paths, as specified by the htaccess file provided
with Drupal. For this we will use an internal `Regular
expression`-type rule matching the following expression:

----
(\.(engine|inc|info|install|module|profile|po|sh|.*sql|theme|tpl(\.php)?|xtmpl)|^(code-style\.pl|Entries.*|Repository|Root|Tag|Template))(\?.*)?$
----

Handle this with the `HTTP error` handler:

[options="header"]
|=============
|Error
|403 Forbidden
|=============

Sixth step
++++++++++

The last thing to do on Cherokee's side is to specify a sixth rule
that fixes an issue with how requests for the root are managed having
the `File exists` handler in place. Simply define yet another
redirection rule for this regular expression:

[options="header"]
|=========================================
|Type     |Regular Expression |Redirection
|Internal |^/$                |/index.php
|=========================================

All done. After this you should have six rules in your list. This
configuration does work. Reorder your rules accordingly if you seem to
have any trouble.

.List of rules
image::media/images/cookbook_drupal_rules.png[Drupal rules]

Now, to install Drupal!

[[drupal]]
Setting up Drupal
~~~~~~~~~~~~~~~~~

First download and uncompress the distributed Drupal release into
`/var/www/drupal`, and create a database suitable for the installation.

Log in to MySQL:

----------------
mysql -u root -p
----------------

And create the database for Drupal. We will be using the name
'drupal', the user 'drupaluser' and the password 'drupalpassword', but
you should set up your own.

------------------------------------------------------------------------
CREATE DATABASE drupal;
GRANT ALL PRIVILEGES ON drupal.* TO drupaluser@localhost IDENTIFIED BY 'drupalpassword';
GRANT ALL PRIVILEGES ON drupal.* TO drupaluser@localhost.localdomain IDENTIFIED BY 'drupalpassword';
FLUSH PRIVILEGES;
quit;
------------------------------------------------------------------------

Then point your web browser to `http://localhost` and follow the
instructions provided by the installer.

You will need to copy the config file and change the permissions manually to proceed:

----
cd /var/www/drupal/sites/default
cp default.settings.php settings.php
chmod 644 settings.php
----

And the installation will be almost automatic. Just fill up the
requested values and you will obtain the following results once your
are through.

image::media/images/cookbook_drupal.png[Drupal in action!]


/////////////////////////////
#Config snippet from ericdrex


vserver!60!directory_index = index.php,index.html
vserver!60!document_root = /var/www/drupal
vserver!60!domain!1 = my.drupal.site.com
vserver!60!error_handler = error_redir
vserver!60!error_handler!404 = /index.php
vserver!60!keepalive = 1
vserver!60!logger = combined
vserver!60!logger!access!buffsize = 16384
vserver!60!logger!access!filename = /var/log/cherokee/drupal.access
vserver!60!logger!access!type = file
vserver!60!logger!error!filename = /var/log/cherokee/drupal.error
vserver!60!logger!error!type = file
vserver!60!nick = drupal

# works around a bug in file exists rule below by catching request for the root.
vserver!60!rule!600!encoder!deflate = 0
vserver!60!rule!600!encoder!gzip = 0
vserver!60!rule!600!handler = redir
vserver!60!rule!600!handler!rewrite!1!show = 0
vserver!60!rule!600!handler!rewrite!1!substring = /index.php
vserver!60!rule!600!match = request
vserver!60!rule!600!match!final = 1
vserver!60!rule!600!match!request = ^/$
vserver!60!rule!600!only_secure = 0

# php
vserver!60!rule!500!encoder!deflate = 1
vserver!60!rule!500!encoder!gzip = 1
vserver!60!rule!500!handler = fcgi
vserver!60!rule!500!handler!balancer = round_robin
vserver!60!rule!500!handler!balancer!source!1 = 1
vserver!60!rule!500!handler!check_file = 1
vserver!60!rule!500!handler!error_handler = 1
vserver!60!rule!500!handler!pass_req_headers = 1
vserver!60!rule!500!handler!xsendfile = 1
vserver!60!rule!500!match = extensions
vserver!60!rule!500!match!extensions = php
vserver!60!rule!500!match!final = 1
vserver!60!rule!500!only_secure = 0

# block bad paths, including with ?something appended (tricky!)
vserver!60!rule!400!encoder!deflate = 1
vserver!60!rule!400!encoder!gzip = 1
vserver!60!rule!400!handler = custom_error
vserver!60!rule!400!handler!error = 403
vserver!60!rule!400!match = request
vserver!60!rule!400!match!directory = /
vserver!60!rule!400!match!extensions = module,inc
vserver!60!rule!400!match!final = 1
vserver!60!rule!400!match!request = \.(engine|inc|info|install|module|profile|po|sh|.*sql|theme|tpl(\.php)?|xtmpl)(\?.*)?$|^(code-style\.pl|Entries.*|Repository|Root|Tag|Template)$
vserver!60!rule!400!only_secure = 0

# clean urls rewrite for request with ?post=params
vserver!60!rule!300!encoder!deflate = 1
vserver!60!rule!300!encoder!gzip = 1
vserver!60!rule!300!expiration = time
vserver!60!rule!300!expiration!time = 1w
vserver!60!rule!300!handler = file
vserver!60!rule!300!handler!iocache = 1
vserver!60!rule!300!match = exists
vserver!60!rule!300!match!exists = a
vserver!60!rule!300!match!final = 1
vserver!60!rule!300!match!iocache = 1
vserver!60!rule!300!match!match_any = 1
vserver!60!rule!300!only_secure = 0
vserver!60!rule!200!encoder!deflate = 0
vserver!60!rule!200!encoder!gzip = 0
vserver!60!rule!200!handler = redir
vserver!60!rule!200!handler!rewrite!1!show = 0
vserver!60!rule!200!handler!rewrite!1!substring = /index.php?q=$1&$2
vserver!60!rule!200!match = request
vserver!60!rule!200!match!final = 1
vserver!60!rule!200!match!request = ^/(.*)\?(.*)$
vserver!60!rule!200!only_secure = 0

# same for requests with no POST params
vserver!60!rule!100!encoder!deflate = 0
vserver!60!rule!100!encoder!gzip = 0
vserver!60!rule!100!handler = redir
vserver!60!rule!100!handler!rewrite!1!regex = ^(.*)$
vserver!60!rule!100!handler!rewrite!1!show = 0
vserver!60!rule!100!handler!rewrite!1!substring = /index.php?q=$1
vserver!60!rule!100!match = default
vserver!60!rule!100!match!final = 1
vserver!60!rule!100!only_secure = 0

/////////////////////////////
