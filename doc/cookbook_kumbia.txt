== link:index.html[Index] -> link:cookbook.html[Cookbook]

Cookbook: Setting up Kumbia PHP Framework
-----------------------------------------

link:http://www.kumbiaphp.com/[Kumbia] is a free web framework written
in PHP5. Configuring Cherokee to run with Kumbia is almost trivial.

Translated from the projects
link:http://www.kumbiaphp.com/blog/about/[About] page:

**********************************************************************

Kumbia is a free web framework written in PHP5. Based on the best web
developing practices, used in commercial and educational software,
Kumbia encourages speed and efficiency in web application creation and
maintainment, substituting repetitive coding tasks for power, control
and pleasure.

**********************************************************************

First you have to unpack the package into your web hierarchy,
`/var/www/kumbia_demo` for example.

Then you have to set the `public` subdirectory as your document web
root.

Then, you have to set up several rules in Cherokee to rewrite the
requests. To do that, proceed to the
link:config_virtual_servers.html[Virtual servers] section. Select the
virtual server that you will be configuring and go to the `Behavior`
tab and `Rule Management` to set up the rules.

.Steps
. You will need to keep the rule for the `php` extension.

. Next, configure a rule with the handler `File Exists` that should be
  set to a priority lower than that of the `php` rule.  This one can
  be set to match any file: the important thing is to check the `Match
  any file` checkbox. Let this rule be handled by the
  link:modules_handlers_file.html[Static Content] handler.

. And last, modify your `Default` rule by configuring the
  link:modules_handlers_redir.html[redirection handler], through the
  `Handler` tab.
+
[options="header"]
|===============================================
|Type     |Regular Expression |Substitution
|Internal |^(.*)$             |/index.php?url=$1
|===============================================

This will take care of redirecting the requests to Kumbia.

You are done with the configuration! You can now access your
application.
